# ===============================
# = DATA SOURCE
# ===============================

# The Configurations for the database connection
# Connection url for the database "netgloo_blog"
## Username and secret
spring.datasource.url = ${DATABASE_URL}
spring.datasource.username = ${DATABASE_USERNAME}
spring.datasource.password = ${DATABASE_PASSWORD}

#spring.datasource.url = jdbc:mysql://localhost:3306/sk-book-store
## Username and secret
#spring.datasource.username = root
#spring.datasource.password = root
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.session.store-type=jdbc

# ===============================
# = JPA / HIBERNATE
# ===============================

# Used spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl= true

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.host = smtp.gmail.com
spring.mail.username =sk.groups.info@gmail.com
spring.mail.password =RLCeepdM2c6V
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
support.email=sk.groups.info@gmail.com

#Allows to set application mode for either test or production mode.
application.mode=test 

server.port=9090